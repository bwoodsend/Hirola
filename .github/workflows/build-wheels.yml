---
name: Build Wheels

on:
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
#          - ubuntu-latest
          - windows-latest
#          - macos-latest
        arch:
          - AMD64
        include:
          - os: windows-latest
            arch: x86

    env:
      CIBW_SKIP: pp*
      CIBW_ARCHS_MACOS: x86_64
      CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
      CIBW_BEFORE_ALL: pip config set wheel.prefer-binary true
#      CIBW_ENVIRONMENT_WINDOWS: CC=clang
      CIBW_TEST_COMMAND: pytest --no-cov {package}
      CIBW_TEST_EXTRAS: test
      CIBW_BEFORE_TEST: pip install --prefer-binary numpy

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      - run: python -m pip install cibuildwheel==2.11.4

      - name: Install clang
        if: startsWith(matrix.os, 'windows')
        uses: bwoodsend/setup-winlibs-action@v1
        with:
          architecture: ${{ matrix.architecture }}
          with_clang: true

      - run: python -m cibuildwheel --output-dir wheelhouse

      - run: python -m cibuildwheel --output-dir wheelhouse
        if: runner.os == 'macos'
        env:
          CIBW_ARCHS_MACOS: arm64
          CIBW_ENVIRONMENT_MACOS: MACOS_ARCHITECTURE=arm64

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
